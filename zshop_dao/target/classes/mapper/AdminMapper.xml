<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.cr.zshop.dao.AdminDao">

    <resultMap id="adminMap1" type="Admin">
        <id property="id" column="id"/>
        <result property="name" column="name"/>
        <result property="loginName" column="login_name"/>
        <result property="phone" column="phone"/>
        <result property="email" column="email"/>
        <result property="isValid" column="is_valid"/>
        <result property="createDate" column="create_date"/>
        <association property="role" javaType="Role" column="role_id">
            <id property="id" column="r.id"/>
            <result property="roleName" column="role_name"/>
        </association>
    </resultMap>

    <resultMap id="adminMap2" type="Admin">
        <id property="id" column="id"/>
        <result property="name" column="name"/>
        <result property="loginName" column="login_name"/>
        <result property="phone" column="phone"/>
        <result property="email" column="email"/>
        <result property="isValid" column="is_valid"/>
        <result property="createDate" column="create_date"/>
        <association property="role" javaType="Role" column="role_id">
            <id property="id" column="role_id"/>
        </association>
    </resultMap>

    <select id="selectAll" resultMap="adminMap1">
        select a.id,a.name,a.login_name,a.phone,a.email,a.is_valid,a.create_date,a.role_id,r.id 'r.id',r.role_name
          from t_admin a
        left join t_role r on a.role_id = r.id
        order by a.id
    </select>

    <select id="selectByParams" parameterType="com.cr.zshop.params.AdminParams" resultMap="adminMap1">
        select a.id,a.name,a.login_name,a.phone,a.email,a.is_valid,a.create_date,a.role_id,r.id 'r.id',r.role_name
        from t_admin a
                 left join t_role r on a.role_id = r.id
        <where>
            <if test="name!=null and name!=''">
                and name like concat(concat('%',#{name}),'%')
            </if>
            <if test="loginName!=null and loginName!=''">
                and login_name like concat(concat('%',#{loginName}),'%')
            </if>
            <if test="phone!=null and phone!=''">
                and phone =#{phone}
            </if>
            <if test="roleId!=null and roleId!=-1">
                and role_id = #{roleId}
            </if>
            <if test="isValid!=null and isValid!=-1">
                and is_valid = #{isValid}
            </if>
        </where>
        order by a.id
    </select>

    <select id="selectByLoginNameAndPassword" resultMap="adminMap1">
        select a.id,a.name,a.login_name,a.phone,a.email,a.is_valid,a.create_date,a.role_id,r.id 'r.id',r.role_name
        from t_admin a
                 left join t_role r on a.role_id = r.id
        where a.login_name = #{loginName} and a.password = #{password} and a.is_valid =#{isValid}
    </select>

    <select id="selectById" resultMap="adminMap2">
        select id,name,login_name,phone,email,is_valid,create_date,role_id
          from t_admin
              where id = #{id}
    </select>

    <insert id="insert" parameterType="Admin">
        insert into t_admin(
                name,login_name,password,phone,email,is_valid,create_date,role_id
                )
        values (#{name},#{loginName},#{password},#{phone},#{email},#{isValid},#{createDate},#{role.id})
    </insert>

    <update id="update" parameterType="Admin">
        update t_admin
        set
            name = #{name},
            phone = #{phone},
            email = #{email},
            role_id = #{role.id}
        where id = #{id}
    </update>

    <update id="updateStatus">
        update t_admin
        set
            is_valid = #{isValid}
        where id = #{id}
    </update>

</mapper>